@using Microsoft.AspNetCore.Components.Authorization
@using MongoDB.Wrapper.Abstractions
@using ProjectManager.Models.Statics
@inherits LayoutComponentBase
@inject IMongoDb _mongoDb

<MudThemeProvider @bind-IsDarkMode="_isDarkMode" Theme="Theme.Default" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
	<AuthorizeView>
		<MudAppBar>
			<MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="DrawerToggle" />
			<div>
				<MudText Typo="Typo.h6">Project Manager</MudText>
				<MudText Typo="Typo.caption">Projekt zaliczeniowy przedmiotu "Projektowanie aplikacji webowych"</MudText>
			</div>
			<MudSpacer />
			<MudToggleIconButton @bind-Toggled="_isDarkMode" Icon="@Icons.Material.Filled.DarkMode" ToggledIcon="@Icons.Material.Filled.LightMode" ToggledColor="Color.Warning" />
		</MudAppBar>
		<MudDrawer @bind-Open="@_drawerOpen">
			<NavMenu />
		</MudDrawer>
	</AuthorizeView>
	<MudMainContent>
		<AuthorizeView>
			<Authorized>
				<div class="pa-3">
					@Body
				</div>
			</Authorized>
			<NotAuthorized>
				<LoginPage />
			</NotAuthorized>
		</AuthorizeView>
	</MudMainContent>
</MudLayout>

<div id="blazor-error-ui" style="color: red">
	An unhandled error has occurred.
	<a href="" class="reload">Reload</a>
	<a class="dismiss">🗙</a>
</div>

@code {
	
	[CascadingParameter]
	public required Task<AuthenticationState> AuthState { get; set; }
	
	bool _drawerOpen = true, _isDarkMode = false;

	void DrawerToggle()
	{
		_drawerOpen = !_drawerOpen;
	}

}